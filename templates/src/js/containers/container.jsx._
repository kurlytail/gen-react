<%
const cell = design.MasterCell.find(cell => cell.name === context);
const className = lodash.upperFirst(lodash.camelCase(cell.name));
const importComponents = _.union(_.pluck(cell.output, 'to')
    .filter(cell => cell.name.endsWith('Component'))
    .map(cell => lodash.upperFirst(lodash.camelCase(cell.name))));
const importContainers = _.union(_.pluck(cell.output, 'to')
    .filter(cell => cell.name.endsWith('Container'))
    .map(cell => lodash.upperFirst(lodash.camelCase(cell.name))));
%>
import React, { Component } from 'react';
<%if (className === 'RootContainer') {%>
import {
  BrowserRouter as Router
} from 'react-router-dom';
<%}%>
import { Route } from 'react-router-dom';
<%if (importComponents.length !== 0) {%>
import {<%=importComponents.join(',')%>} from '../components';
<%}%>
<%
importContainers.forEach(name => {
%>
import <%=name%> from './<%=name%>';
<%
});
%>

class <%=className%> extends Component {
    render() {
        const Container = <div <%=extension('react-tag.*', 'container-attributes').join(' ')%>>
<%
cell.output.filter(tube => tube.to.name.endsWith('Component') || tube.to.name.endsWith('Container'))
    .forEach(tube => {
        const component = tube.to;
        const componentClassName = lodash.upperFirst(lodash.camelCase(component.name));
        const routes = design.Flow.filter(f => f.name.endsWith('Route') && _.intersection(f.tube, tube.designTubes).length !== 0);
%>
<%      if (routes.length !== 0) {%>
<%          routes.forEach(route => {%>
            <Route path={'<%=route.name%>'} component={<%=componentClassName%>} />
<%          });%>
<%      } else {%>
            <<%=componentClassName%> label='<%=tube.name%>'/>
<%      }%>
<%  });%>
        </div>;
<%if (className === 'RootContainer') {%>
        return <Router>
            {Container}
        </Router>;
<%} else {%>
        return Container;
<%}%>
    }
}

export default <%=className%>;