<%
const cell = design.MasterCell.find(cell => cell.name === context);
const className = lodash.upperFirst(lodash.camelCase(cell.name));
const importComponents = _.union(_.pluck(cell.output, 'to')
    .filter(cell => cell.name.endsWith('Component'))
    .map(cell => lodash.upperFirst(lodash.camelCase(cell.name))));
const importContainers = _.union(_.pluck(cell.output, 'to')
    .filter(cell => cell.name.endsWith('Container'))
    .map(cell => lodash.upperFirst(lodash.camelCase(cell.name))));
%>
import React, { Component } from 'react';
import PropTypes from 'prop-types';
<%if (importContainers.length !== 0) {%>
import {<%=importContainers.join(',')%>} from '../containers';
<%}%>
<%
importComponents.forEach(name => {
%>
import <%=name%> from './<%=name%>';
<%
});
%>

class <%=className%> extends Component {
    render() {
        return <section <%=extension('react-tag.*', 'component-attributes').join(' ')%>>
            <header <%=extension('react-tag.*', 'component-header-attributes').join(' ')%>>
                <h2>{this.props.label}</h2>
            </header>
            <div <%=extension('react-tag.*', 'component-body-attributes').join(' ')%>>
<%
cell.output.filter(tube => tube.to.name.endsWith('Component') || tube.to.name.endsWith('Container'))
    .forEach(tube => {
    const component = tube.to;
    const componentClassName = lodash.upperFirst(lodash.camelCase(component.name));
%>
            <<%=componentClassName%> label='<%=tube.name%>'/>
<%
});
%>
            </div>
        </section>;
    }
}

<%=className%>.propTypes = {
    label: PropTypes.string
};

export default <%=className%>;